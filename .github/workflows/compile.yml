on: [push]

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        architecture: ['x64']
        include:
          - os: windows
            data-file: "data/schema.sql;schema.sql"
          - os: macos
            data-file: "data/schema.sql:schema.sql"
          - os: linux
            data-file: "data/schema.sql:schema.sql"
    runs-on: ${{ matrix.os }}-latest
    name: ${{ matrix.os }}-${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: ${{ matrix.architecture }}
      - run: pip install -r requirements.txt pyinstaller
      - run: mkdir build
      - run: mkdir bin
      - run: pyinstaller --distpath bin --clean --add-data ${{ matrix.data-file }} --onefile --name npbc_cli-${{ matrix.os }}-${{ matrix.architecture }} npbc_cli.py
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_cli-${{ matrix.os }}-${{ matrix.architecture }}

  # build-win:
  #   runs-on: windows-latest
  #   name: windows-latest-x64
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.10'
  #         architecture: x64
  #     - run: pip install -r requirements.txt pyinstaller
  #     - run: mkdir build
  #     - run: mkdir bin
  #     - run: pyinstaller --distpath bin --clean --add-data "data/schema.sql;schema.sql" --onefile --name npbc_cli-windows-latest-x64.exe npbc_cli.py
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: bin
  #         name: npbc_cli-windows-latest-x64
  
  release:
    needs:
      # - build-win
      - build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
    - run: mkdir bin
    - uses: actions/download-artifact@v2
      with:
        path: bin
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "bin/npbc_cli*/*"
        token: ${{ secrets.GITHUB_TOKEN }}
