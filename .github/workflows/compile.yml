on: [push]
jobs:
  build:
    strategy:
      matrix:
        # os: [windows-latest, ubuntu-latest, macos-latest]
        os: [ubuntu-latest]
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: ${{ matrix.architecture }}
      - run: pip install -r requirements.txt pyinstaller
      - run: mkdir build
      - run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - run: pyinstaller --distpath npbc_cli-${{ env.RELEASE_VERSION }}-${{ matrix.os }}-${{ matrix.architecture }} --clean npbc_cli.spec
      - uses: actions/upload-artifact@v2
        with:
          path: npbc_cli-${{ matrix.os }}-${{ matrix.architecture }}*
  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: mkdir bin
      - uses: actions/download-artifact@v2
        with:
          path: ./bin
      - run: tree .
      - id: release_step
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE.txt
            *.jar
      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release_step.outputs.upload_url }}
          asset_path: "npbc_cli*x*"
          asset_name: my-widget
          asset_content_type: application/octet-stream