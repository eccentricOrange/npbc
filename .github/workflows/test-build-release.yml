name: Test, build and release

on: [push]

jobs:

  # test with pytest
  test:
    name: pytest
    runs-on: ubuntu-latest

    # used to ensure testing directories are used, not user directories
    env:
      DEVELOPMENT: '1'

    steps:
      - uses: actions/checkout@v2
      
      # build SQLite from source, because I need 3.35<=
      - run: |
          wget https://sqlite.org/2022/sqlite-autoconf-3380500.tar.gz
          tar -xvf sqlite-autoconf-3380500.tar.gz
      - run: |
          ./configure
          make
          sudo make install
          export PATH="/usr/local/lib:$PATH"
        working-directory: sqlite-autoconf-3380500

      # run pytest
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt pytest
      - run: pytest
        env:
          LD_LIBRARY_PATH: /usr/local/lib

  # build executable for windows
  build-windows:
    name: build for windows
    runs-on: windows-latest
    # needs: test

    steps:

      # setup
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: |
          pip install -r requirements.txt pyinstaller
          mkdir bin
          mkdir build

      # build
      - run: |
          pyinstaller --distpath bin --clean --add-data "data/schema.sql;." --onefile --name npbc_cli-windows-x64 npbc_cli.py
          pyinstaller --distpath bin --clean --onefile --name npbc_updater-windows-x64 npbc_updater.py

      # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_cli-windows-x64 
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_updater-windows-x64 

  # build executable for linux
  build-linux:
    name: build for linux
    runs-on: ubuntu-latest
    # needs: test

    steps:

      # setup
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: |
          pip install -r requirements.txt pyinstaller
          mkdir bin
          mkdir build

      # build
      - run: |
          pyinstaller --distpath bin --clean --add-data "data/schema.sql:." --onefile --name npbc_cli-linux-x64 npbc_cli.py
          pyinstaller --distpath bin --clean --onefile --name npbc_updater-linux-x64 npbc_updater.py

      # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_cli-linux-x64 
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_updater-linux-x64

  # build executable for windows
  build-macos:
    name: build for macos
    runs-on: macos-latest
    # needs: test

    steps:

      # setup
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: |
          pip install -r requirements.txt pyinstaller
          mkdir bin
          mkdir build

      # build
      - run: |
          pyinstaller --distpath bin --clean --add-data "data/schema.sql:." --onefile --name npbc_cli-macos-x64 npbc_cli.py
          pyinstaller --distpath bin --clean --onefile --name npbc_updater-macos-x64 npbc_updater.py

      # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_cli-macos-x64 
      - uses: actions/upload-artifact@v2
        with:
          path: bin
          name: npbc_updater-macos-x64